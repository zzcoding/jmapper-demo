<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:http-conf="http://cxf.apache.org/transports/http/configuration"
	xmlns:jaxws="http://cxf.apache.org/jaxws" xmlns:oscache="http://www.springmodules.org/schema/oscache"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	 	 http://www.springframework.org/schema/beans/spring-beans-3.1.xsd 
	 	 http://www.springframework.org/schema/context
	 	 http://www.springframework.org/schema/context/spring-context-3.1.xsd 
	 	 http://www.springframework.org/schema/aop 
	 	 http://www.springframework.org/schema/aop/spring-aop-3.1.xsd 
	 	 http://www.springframework.org/schema/tx 
	 	 http://www.springframework.org/schema/tx/spring-tx-3.1.xsd 
	 	 http://www.springmodules.org/schema/oscache 
	 	 http://www.springmodules.org/schema/cache/springmodules-oscache.xsd
	 	 http://www.springframework.org/schema/mvc
	 	 http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd 
	 	 http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd
	 	 http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd "
	default-autowire="byName">

	<!-- 对web包中的所有类进行扫描，以完成Bean创建和自动依赖注入的功能 mvc:annotation-driven -->
	<aop:aspectj-autoproxy />
	<aop:aspectj-autoproxy proxy-target-class="true" />


	<mvc:annotation-driven />
	<!-- 扫描包 -->
	<context:annotation-config />
	<context:component-scan base-package="com.*" />
	<util:properties id="config" location="classpath:config.properties"
		local-override="true" />
	<bean id="jspViewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/WEB-INF/view/" />
		<property name="suffix" value=".jsp" />
	</bean>
	<mvc:resources mapping="/resources/**" location="/resources/" />
	
	<!-- 配置jdbc -->
	<bean
		class="org.springframework.beans.factory.config.PreferencesPlaceholderConfigurer">
		<property name="locations">
		   <value>classpath:config.properties</value>			
		</property>
	</bean>

	<!-- 配置数据源 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="initialSize" value="10" />
		<property name="maxActive" value="10" />
		<property name="maxIdle" value="10" />
		<property name="minIdle" value="10" />
		<!-- 连接被泄露时是否打印 -->
		<property name="logAbandoned" value="true" />
		<!-- 是否自动回收超时连接 -->
		<property name="removeAbandoned" value="true" />
		<!-- 超时时间(以秒数为单位) -->
		<property name="removeAbandonedTimeout" value="360" />
		<!-- 超时等待时间以毫秒为单位 1000等于60秒 -->
		<property name="maxWait" value="1000" />
		<!-- 在空闲连接回收器线程运行期间休眠的时间值,以毫秒为单位. -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<!-- 在每次空闲连接回收器线程(如果有)运行时检查的连接数量 -->
		<property name="numTestsPerEvictionRun" value="10" />
		<!-- 1000 * 60 * 30 连接在池中保持空闲而不被空闲连接回收器线程 -->
		<property name="minEvictableIdleTimeMillis" value="1000" />
		<property name="testWhileIdle" value="true" />
		<property name="validationQuery" value="SELECT NOW() FROM DUAL" />
	</bean>

	
  <bean id="mapperEngine" class="com.jmapper.core.engine.MapperEngine">
  	<property name="entity" value="entity.mapper.*" />
  	<property name="sql" value="sql.mapper.*" />
  </bean>
  <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
    <property name="dataSource">  
      <ref local="dataSource"/>  
    </property>  
  </bean>  
   <bean id="namedParameterJdbcTemplate"  class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
  
    <constructor-arg>
     <ref local="dataSource"/>  
    </constructor-arg>
   </bean>
   <bean id="jdbcTemplate"  class="org.springframework.jdbc.core.JdbcTemplate">
    <constructor-arg>
     <ref local="dataSource"/>  
    </constructor-arg>
   </bean>
	<tx:annotation-driven transaction-manager="transactionManager" />

	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		
			<property name="messageConverters">
				<list>
					<bean
						class="org.springframework.http.converter.StringHttpMessageConverter">
						<property name="supportedMediaTypes">
							<list>
								<value>text/html; charset=UTF-8</value>
								<value>application/json;charset=UTF-8</value>
							</list>
						</property>
					</bean>
				</list>
			</property>
		</bean>
		
        <mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<bean class="com.common.interceptor.XssProcessInterceptor">
			</bean>
		</mvc:interceptor>
		</mvc:interceptors>
	
</beans>